openapi: 3.0.0
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0

paths:
  /user:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /user/{id}:}:
      get:
        summary: Get a user by ID
        parameters:
          - name: id
            in: path
            required: true
            description: ID of the user to retrieve
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: The requested user
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
      put:
        summary: Update a user's password
        parameters:
          - name: id
            in: path
            required: true
            description: ID of the user to update
            schema:
              type: string
              format: uuid
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePasswordDto'
        responses:
          '200':
            description: The updated user
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
      delete:
        summary: Delete a user
        parameters:
          - name: id
            in: path
            required: true
            description: ID of the user to delete
            schema:
              type: string
              format: uuid
        responses:
          '204':
            description: No content
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string

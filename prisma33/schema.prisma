// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String     @id @default(uuid())
  name      String
  grammy    Boolean
  albums    Album[]
  tracks    Track[]
  favorites Favorite[]
}

model Album {
  id        String     @id @default(uuid())
  name      String
  year      Int
  artistId  String?
  artist    Artist?    @relation(fields: [artistId], references: [id])
  tracks    Track[]
  favorites Favorite[]
}

model Track {
  id        String     @id @default(uuid())
  name      String
  duration  Int
  artist    Artist?    @relation(fields: [artistId], references: [id])
  artistId  String?    @unique
  album     Album?     @relation(fields: [albumId], references: [id])
  albumId   String?    @unique
  favorites Favorite[]
}

model Favorite {
  id       String  @id @default(uuid())
  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId String?
  album    Album?  @relation(fields: [albumId], references: [id])
  albumId  String?
  track    Track?  @relation(fields: [trackId], references: [id])
  trackId  String?
}
